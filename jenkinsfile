pipeline {
    agent any

    stages {
        stage('Start Jenkins') {
            steps {
                script {
                    withCredentials([
                        string(credentialsId: 'OMISE_PUBLIC_KEY', variable: 'OMISE_PUBLIC_KEY'),
                        string(credentialsId: 'OMISE_SECRET_KEY', variable: 'OMISE_SECRET_KEY'),
                    ]) {
                        echo 'Start Jenkins............'
                        echo "OMISE_PUBLIC_KEY: ${OMISE_PUBLIC_KEY}"
                        echo "OMISE_SECRET_KEY: ${OMISE_SECRET_KEY}"
                    }
                }
            }
        }

        stage('Copy repository and Build Docker Compose') {
            steps {
                script {
                    checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId: 'kenGithub', url: 'https://github.com/Kenmuraki5/kro-gamestore.git']])
                
                    dir('kro-gamestore') {
                        // Avoid using java.io.File in a way that triggers Script Security restrictions
                        sh 'git clone https://github.com/Kenmuraki5/kro-backend.git'

                        dir('kro-backend') {
                            // Modify the script to comply with security restrictions
                            echo "OMISE_PUBLIC_KEY=${OMISE_PUBLIC_KEY}" > .env
                            echo "OMISE_SECRET_KEY=${OMISE_SECRET_KEY}" >> .env
                            echo "SECRET_KEY=s_kroKey_back_i2tpohbojgagageq3u4ihryh" >> .env
                        }
                    }
                }
            }
        }

        stage('Build and Run Docker Compose') {
            steps {
                script {
                    // Adjust the script to comply with security restrictions
                    sh "PATH=\$PATH:/usr/local/bin docker-compose -f 'kro-gamestore/kro-backend/docker-compose.yml' up -d --build"
                }
            }
        }
    }
}
